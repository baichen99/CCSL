definitions:
  controllers.CreateModelResponse:
    properties:
      message:
        example: success
        type: string
    type: object
  controllers.ErrorResponse:
    properties:
      error:
        example: error message
        type: string
      message:
        example: error title
        type: string
    type: object
  controllers.GetNotificationsListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/models.Notification'
        type: array
      limit:
        example: 10
        type: integer
      message:
        example: success
        type: string
      page:
        example: 1
        type: integer
      total:
        example: 100
        type: integer
    type: object
  controllers.GetUsersListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/models.User'
        type: array
      limit:
        example: 10
        type: integer
      message:
        example: success
        type: string
      page:
        example: 1
        type: integer
      total:
        example: 100
        type: integer
    type: object
  controllers.GetVideosListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/models.LexicalVideo'
        type: array
      limit:
        example: 10
        type: integer
      message:
        example: success
        type: string
      page:
        example: 1
        type: integer
      total:
        example: 100
        type: integer
    type: object
  controllers.UserCreateForm:
    properties:
      avatar:
        example: https://ccsl.shu.edu.cn/public/assets/default.png
        type: string
      name:
        example: Adrian Duan
        type: string
      password:
        example: p@ssw0rd
        type: string
      state:
        enum:
        - active
        - inactive
        example: active
        type: string
      userType:
        enum:
        - super
        - admin
        - user
        - learner
        example: admin
        type: string
      username:
        example: adrianduan@icloud.com
        type: string
    required:
    - name
    - state
    - userType
    - username
    type: object
  controllers.UserUpdateForm:
    properties:
      avatar:
        example: https://ccsl.shu.edu.cn/public/assets/default.png
        type: string
      name:
        example: Adrian Duan
        type: string
      state:
        enum:
        - active
        - inactive
        example: active
        type: string
      userType:
        enum:
        - super
        - admin
        - user
        - learner
        example: admin
        type: string
      username:
        example: adrianduan@icloud.com
        type: string
    type: object
  models.LexicalVideo:
    properties:
      createdAt:
        example: "2019-10-21T09:20:39.943618Z"
        type: string
      id:
        example: 550e8400-e29b-41d4-a716-446655440000
        format: uuid
        type: string
      leftSignsID:
        description: 左手手形ID
        example:
        - 550e8400-e29b-41d4-a716-446655440000
        format: uuid
        items:
          type: string
        type: array
      lexiconID:
        description: 词汇ID
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
      morpheme:
        description: 构词语素
        example:
        - hello
        - world
        items:
          type: string
        type: array
      performerID:
        description: 被试ID
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
      rightSignsID:
        description: 右手手形ID
        example:
        - 550e8400-e29b-41d4-a716-446655440000
        format: uuid
        items:
          type: string
        type: array
      updatedAt:
        example: "2019-10-21T09:20:39.943618Z"
        type: string
      videoPath:
        description: 视频路径
        example: lexical_videos/550e8400-e29b-41d4-a716-446655440000.mp4
        type: string
      wordFormation:
        description: 构词方式
        example: simple
        type: string
    type: object
  models.Notification:
    properties:
      createdAt:
        example: "2019-10-21T09:20:39.943618Z"
        type: string
      id:
        example: 550e8400-e29b-41d4-a716-446655440000
        format: uuid
        type: string
      message:
        type: string
      readAt:
        example: "2019-10-21T09:20:39.943618Z"
        type: string
      updatedAt:
        example: "2019-10-21T09:20:39.943618Z"
        type: string
      userID:
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
    type: object
  models.User:
    properties:
      avatar:
        description: 头像
        example: https://ccsl.shu.edu.cn/public/assets/default.png
        type: string
      createdAt:
        example: "2019-10-21T09:20:39.943618Z"
        type: string
      id:
        example: 550e8400-e29b-41d4-a716-446655440000
        format: uuid
        type: string
      name:
        description: 姓名
        example: Adrian Duan
        type: string
      state:
        description: 状态
        example: active
        type: string
      updatedAt:
        example: "2019-10-21T09:20:39.943618Z"
        type: string
      userType:
        description: 用户角色
        example: admin
        type: string
      username:
        description: 账号（一卡通或者邮箱）
        example: adrianduan@icloud.com
        type: string
    type: object
host: localhost:8888
info:
  contact: {}
  license: {}
  title: CCSL API
  version: "1.0"
paths:
  /lexical/videos:
    get:
      consumes:
      - application/json
      description: get videos list
      parameters:
      - description: select from page
        in: query
        minimum: 1
        name: page
        type: integer
      - description: limit number
        in: query
        minimum: 0
        name: limit
        type: integer
      - description: order by field
        in: query
        name: order
        type: string
      - description: order by asc or desc
        enum:
        - asc
        - desc
        in: query
        name: orderBy
        type: string
      - description: filter by lexicon ID
        in: query
        name: lexiconID
        type: string
      - description: filter initial
        in: query
        name: initial
        type: string
      - description: search by Chinese
        in: query
        name: chinese
        type: string
      - description: search by English
        in: query
        name: english
        type: string
      - description: filter by part of speech
        in: query
        name: pos
        type: string
      - description: filter by region ID
        in: query
        name: regionID
        type: integer
      - description: filter by gender
        enum:
        - M
        - F
        in: query
        name: gender
        type: string
      - description: filter by left sign ID
        in: query
        name: leftSignID
        type: string
      - description: filter by right sign ID
        in: query
        name: rightSignID
        type: string
      - description: filter by sign ID
        in: query
        name: signID
        type: string
      - description: search by morpheme
        in: query
        name: morpheme
        type: string
      - description: filter by word formation
        enum:
        - simple
        - compound
        in: query
        name: wordFormation
        type: string
      - description: filter by performer ID
        in: query
        name: performerID
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.GetVideosListResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: List videos for lexical database
      tags:
      - Lexical Videos
  /notifications:
    get:
      consumes:
      - application/json
      description: get notifications list
      parameters:
      - description: select from page
        in: query
        minimum: 1
        name: page
        type: integer
      - description: limit number
        in: query
        minimum: 0
        name: limit
        type: integer
      - description: order by field
        in: query
        name: order
        type: string
      - description: order by asc or desc
        enum:
        - asc
        - desc
        in: query
        name: orderBy
        type: string
      - description: search message of notification
        in: query
        name: message
        type: string
      - description: filter by userID
        in: query
        name: userID
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.GetNotificationsListResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: List notifications
      tags:
      - Notifications
  /notifications/{id}:
    delete:
      consumes:
      - application/json
      description: DELETE a notification by id
      parameters:
      - description: user id
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: DELETE Notification
      tags:
      - Notifications
    get:
      consumes:
      - application/json
      description: GET a notification by id
      parameters:
      - description: user id
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: GET Notification
      tags:
      - Notifications
  /users:
    get:
      consumes:
      - application/json
      description: get users list
      parameters:
      - description: select from page
        in: query
        minimum: 1
        name: page
        type: integer
      - description: limit number
        in: query
        minimum: 0
        name: limit
        type: integer
      - description: order by field
        in: query
        name: order
        type: string
      - description: order by asc or desc
        enum:
        - asc
        - desc
        in: query
        name: orderBy
        type: string
      - description: filter type of user
        enum:
        - super
        - admin
        - user
        - learner
        in: query
        name: userType
        type: string
      - description: search name of user
        in: query
        name: name
        type: string
      - description: search username of user
        in: query
        name: username
        type: string
      - description: filter state of user
        enum:
        - active
        - inactive
        in: query
        name: state
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.GetUsersListResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: List users
      tags:
      - Users
    post:
      consumes:
      - application/json
      description: create a new user
      parameters:
      - description: create user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/controllers.UserCreateForm'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/controllers.CreateModelResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: Create user
      tags:
      - Users
  /users/{id}:
    put:
      consumes:
      - application/json
      description: update a user by id
      parameters:
      - description: user id
        format: uuid
        in: path
        name: id
        required: true
        type: string
      - description: updated user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/controllers.UserUpdateForm'
      produces:
      - application/json
      responses:
        "204": {}
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: Update user
      tags:
      - Users
swagger: "2.0"
